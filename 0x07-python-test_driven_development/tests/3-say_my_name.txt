# The ``3-say_my_name`` module
============================================
How to use 3-say_my_name.py
============================================

This library has one function called ``say_my_name()``

``say_my_name()`` prints a person's first name and last name.

Import the function say_my_name.
    >>> say_my_name = __import__('3-say_my_name').say_my_name

case 1: Passing first_name and last_name correctly.
    >>> say_my_name("Emma", "Muli")
    My name is Emma Muli

    >> say_my_name("Mike")
    My name is Mike

case 2: Passing last_name as None.
    >>> say_my_name("Emma", None)
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

case 3: Passing first_name and last_name as None.
    >>> say_my_name(None, None)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

case 4: Passing first name as None.
    >>> say_my_name(None, "Mike")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

case 5: Passing wrong types as first_name and last_name
    >>> say_my_name(1, "Mike")
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

    >>> say_my_name("Chris", [4])
    Traceback (most recent call last):
        ...
    TypeError: last_name must be a string

case 6: Passing more than two arguments to say_my_name().
    >>> say_my_name("Kiloko", "Mike", "Nzioki") #doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() takes from 1 to 2 positional arguments but ...
